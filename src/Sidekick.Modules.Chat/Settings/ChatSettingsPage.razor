@page "/settings/chat"
@using Microsoft.Extensions.Localization
@using Sidekick.Common.Browser;
@using Sidekick.Common.Settings
@using Sidekick.Common.Ui.App
@using Sidekick.Common.Ui.Forms
@using Sidekick.Common.Ui.Buttons
@using Sidekick.Common.Ui.Layouts
@using Sidekick.Common.Ui.Localization
@using Sidekick.Common.Ui.Typography
@using Sidekick.Modules.Chat.Localization

<LayoutMenu>
    <AppContainer>
        <FormFieldset Legend="@UiResources["Chat_Commands"]">
            <div>
                <ButtonLink OnClick="OpenWikiChatCommands">@WikiChatCommands.ToString()</ButtonLink>

                <div class="my-3">
                    <TextBase>@Resources["Chat_Common_Commands"]</TextBase>
                </div>

                <div class="flex gap-3 mb-1">
                    <code class="bg-stone-950 px-1 min-w-[8em]">/hideout</code>
                    <TextBase>@Resources["Chat_Commands_Hideout"]</TextBase>
                </div>
                <div class="flex gap-3 mb-1">
                    <code class="bg-stone-950 px-1 min-w-[8em]">/leave</code>
                    <TextBase>@Resources["Chat_Commands_Leave"]</TextBase>
                </div>
                <div class="flex gap-3 mb-1">
                    <code class="bg-stone-950 px-1 min-w-[8em]">/exit</code>
                    <TextBase>@Resources["Chat_Commands_Exit"]</TextBase>
                </div>
                <div class="flex gap-3 mb-1">
                    <code class="bg-stone-950 px-1 min-w-[8em]">/invite @@last</code>
                    <TextBase>@Resources["Chat_Commands_Invite"]</TextBase>
                </div>
                <div class="flex gap-3 mb-3">
                    <code class="bg-stone-950 px-1 min-w-[8em]">/kick @@last</code>
                    <TextBase>@Resources["Chat_Commands_Kick"]</TextBase>
                </div>

                <div class="flex gap-3">
                    <code class="bg-stone-950 px-1 min-w-[8em]">@@last</code>
                    <TextBase>@Resources["Chat_Wildcard_LastWhisper_CharacterName"]</TextBase>
                </div>
            </div>
        </FormFieldset>

        <ChatCommandEditor />

        <div class="flex justify-center mb-1">
            <ButtonPrimary Disabled="!AreSettingsModified" OnClick="RestoreDefaults">@UiResources["Restore_Defaults"]</ButtonPrimary>
        </div>
    </AppContainer>
</LayoutMenu>

@inject IStringLocalizer<UiResources> UiResources
@inject IStringLocalizer<ChatResources> Resources
@inject IBrowserProvider Browser
@inject ISettingsService SettingsService
@implements IDisposable

@code {
    private Uri WikiChatCommands => new Uri("https://www.poewiki.net/wiki/Chat#Commands");

    private bool AreSettingsModified { get; set; }

    private string[] SettingKeysUsed { get; } =
    {
        SettingKeys.ChatCommands
    };

    protected override async Task OnInitializedAsync()
    {
        SettingsService.OnSettingsChanged += CheckIfSettingsAreModified;

        CheckIfSettingsAreModified(SettingKeysUsed);

        await base.OnInitializedAsync();
    }

    private void OpenWikiChatCommands()
    {
        Browser.OpenUri(WikiChatCommands);
    }

    private async void CheckIfSettingsAreModified(string[] keys)
    {
        if (!keys.Any(key => SettingKeysUsed.Contains(key)))
        {
            return;
        }

        AreSettingsModified = await SettingsService.IsSettingModified(SettingKeysUsed);
        await InvokeAsync(StateHasChanged);
    }

    private async void RestoreDefaults()
    {
        await SettingsService.DeleteSetting(SettingKeysUsed);

        AreSettingsModified = false;

        StateHasChanged();
    }

    public void Dispose()
    {
        SettingsService.OnSettingsChanged -= CheckIfSettingsAreModified;
    }

}
