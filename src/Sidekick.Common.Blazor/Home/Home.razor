@page "/home"
@using Sidekick.Common.Blazor.Components
@using Sidekick.Common.Blazor.Settings
@using Sidekick.Common.Blazor.Settings.Components
@using Sidekick.Common.Extensions
@using Sidekick.Common.Platform
@using Sidekick.Common.Settings
@using Sidekick.Common.Platform.Input

<LayoutTwoColumn>
    <TopContent>
        <AppBar>
            <AppMinimize/>
            <AppMaximize/>
            <AppClose/>
        </AppBar>
    </TopContent>
    <LeftContent>
        <SidekickMenu/>
    </LeftContent>
    <ChildContent>
        <AppContainer>
            <AppLogo/>
            @if (ApplicationService.SupportsKeybinds)
            {
                <div class="max-w-[300px] mx-auto text-center">
                    <TextBase><TextWithKeybinds Text="@Resources["Price_Check_Tip"]" Keybinds="[KeyOpenPriceCheck]" /></TextBase>
                    <TextBase Class="my-3"><TextWithKeybinds Text="@Resources["Close_Overlay_Tip"]" Keybinds="[KeyClose]" /></TextBase>
                    <TextCaption>@Resources["Close_Notification"]</TextCaption>
                </div>

                <LayoutDivider/>
            }

            <FormFieldset Legend="@Resources["Item_Box_Legend"]">
                <TextBase Class="mb-1">
                    @Resources["Item_Box_Text"]
                </TextBase>
                <FormTextarea @bind-Value="ItemText"/>
                <div class="grid grid-cols-12 gap-3 *:col-span-6">
                    <ButtonPrimary OnClick="PriceCheck">@Resources["Item_Box_Prices"]</ButtonPrimary>
                    <ButtonPrimary OnClick="MapCheck">@Resources["Item_Box_Map"]</ButtonPrimary>
                </div>
            </FormFieldset>
        </AppContainer>
    </ChildContent>
    <BottomContent>
        @if (ApplicationService.SupportsKeybinds)
        {
            <div class="flex justify-end py-2 px-3">
                <SettingCheckboxEditor SettingKey="@SettingKeys.OpenHomeOnLaunch"
                                       Label="@SettingsResources["OpenHomeOnLaunch"]"
                                       Tooltip="@SettingsResources["OpenHomeOnLaunch_Hint"]"
                                       HasResetButton="false" />
            </div>
        }
    </BottomContent>
</LayoutTwoColumn>

@inject ISettingsService SettingsService
@inject IStringLocalizer<HomeResources> Resources
@inject IStringLocalizer<SettingsResources> SettingsResources
@inject IApplicationService ApplicationService
@inject ICurrentView CurrentView
@inject IViewLocator ViewLocator

@code {

    private string? ItemText { get; set; }

    private string? KeyOpenPriceCheck { get; set; }

    private string? KeyClose { get; set; }

    protected override async Task OnInitializedAsync()
    {
        CurrentView.Initialize(new ViewOptions());

        KeyOpenPriceCheck = await SettingsService.GetString(SettingKeys.KeyOpenPriceCheck);
        KeyClose = await SettingsService.GetString(SettingKeys.KeyClose);

        await base.OnInitializedAsync();
    }

    private void PriceCheck()
    {
        if (ItemText != null)
        {
            ViewLocator.Open(SidekickViewType.Overlay, $"/trade/{ItemText.EncodeBase64Url()}");
        }
    }

    private void MapCheck()
    {
        if (ItemText != null)
        {
            ViewLocator.Open(SidekickViewType.Overlay, $"/map/{ItemText.EncodeBase64Url()}");
        }
    }

}
