@using Sidekick.Common.Settings
@using Sidekick.Common.Blazor.Settings.Components

<KeybindEditor Value="@KeyOpen"
               ValueChanged="KeyChanged"
               Label="@Resources["Wiki_Key_Open"]" />

@inject IStringLocalizer<SettingsResources> Resources
@inject ISettingsService SettingsService

@code {

    private string? KeyOpen { get; set; }

    protected override async Task OnInitializedAsync()
    {
        KeyOpen = await SettingsService.GetString(SettingKeys.KeyOpenWiki);
        SettingsService.OnSettingsChanged += OnSettingsChanged;

        await base.OnInitializedAsync();
    }

    private async Task KeyChanged(string? value)
    {
        KeyOpen = value;
        await SettingsService.Set(SettingKeys.KeyOpenWiki, value);
    }

    private async void OnSettingsChanged(string[] keys)
    {
        if (keys.Contains(SettingKeys.KeyOpenWiki))
        {
            KeyOpen = await SettingsService.GetString(SettingKeys.KeyOpenWiki);
            await InvokeAsync(StateHasChanged);
        }
    }

    public void Dispose()
    {
        SettingsService.OnSettingsChanged -= OnSettingsChanged;
    }

}
