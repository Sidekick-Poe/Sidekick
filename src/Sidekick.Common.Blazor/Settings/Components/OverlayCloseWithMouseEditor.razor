@using Sidekick.Common.Blazor.Settings
@using Sidekick.Common.Settings

<FormCheckbox Value="@OverlayCloseWithMouse"
              ValueChanged="OverlayCloseWithMouseChanged">
    @Resources["OverlayCloseWithMouse"]
</FormCheckbox>

@inject IStringLocalizer<SettingsResources> Resources
@inject ISettingsService SettingsService

@code {

    private bool OverlayCloseWithMouse { get; set; }

    protected override async Task OnInitializedAsync()
    {
        OverlayCloseWithMouse = await SettingsService.GetBool(SettingKeys.OverlayCloseWithMouse);
        SettingsService.OnSettingsChanged += OnSettingsChanged;
        await base.OnInitializedAsync();
    }

    private async Task OverlayCloseWithMouseChanged(bool value)
    {
        OverlayCloseWithMouse = value;
        await SettingsService.Set(SettingKeys.OverlayCloseWithMouse, value);
    }

    private async void OnSettingsChanged(string[] keys)
    {
        if (keys.Contains(SettingKeys.OverlayCloseWithMouse))
        {
            OverlayCloseWithMouse = await SettingsService.GetBool(SettingKeys.OverlayCloseWithMouse);
            await InvokeAsync(StateHasChanged);
        }
    }

    public void Dispose()
    {
        SettingsService.OnSettingsChanged -= OnSettingsChanged;
    }

}
