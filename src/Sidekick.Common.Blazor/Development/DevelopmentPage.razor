@page "/development"
@layout MainWindowLayout
@using Microsoft.Extensions.DependencyInjection
@using Sidekick.Common.Blazor.Components
@using Sidekick.Common.Platform
@inherits SidekickView

<AppContainer>
    <FormFieldset Legend="Custom actions">
        <div class="flex gap-3">
            @if (ApplicationService.SupportsKeybinds)
            {
                <ButtonPrimary OnClick="RegisterHooks">Bind keyboard hooks</ButtonPrimary>
            }
            <ButtonPrimary OnClick="ThrowException">Throw an exception</ButtonPrimary>
        </div>
    </FormFieldset>
</AppContainer>

@inject IApplicationService ApplicationService
@inject IServiceProvider ServiceProvider

@code {

    private IKeyboardProvider? KeyboardProvider;

    protected override void OnInitialized()
    {
        if (ApplicationService.SupportsKeybinds)
        {
            KeyboardProvider = ServiceProvider.GetService<IKeyboardProvider>();
        }
        base.OnInitialized();
    }

    private void ThrowException()
    {
#pragma warning disable S112 // General exceptions should never be thrown
        throw new Exception("[Development] This is a test exception.");
#pragma warning restore S112 // General exceptions should never be thrown
    }

    private void RegisterHooks()
    {
        KeyboardProvider?.RegisterHooks();
    }

}
