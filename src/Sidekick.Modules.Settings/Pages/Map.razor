@page "/settings/map"
@layout SettingsLayout
@inherits SidekickView

<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h3">@Resources.Group_Keybinds</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <KeybindEditor Label="@Resources.Map_Key_Check"
                       @bind-Value="ViewModel.Map_Key_Check" />
        <KeybindEditor Label="@Resources.Key_Close"
                       @bind-Value="ViewModel.Key_Close" />
    </MudCardContent>
</MudCard>

<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h3">@Resources.Map_Dangerous</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudTextField Label="@Resources.Map_Dangerous_Regex"
                      Variant="Variant.Filled"
                      @bind-Value="ViewModel.Map_Dangerous_Regex" />
    </MudCardContent>
</MudCard>

<MudCard>
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h3">@Resources.Group_Other</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <div>
            <MudCheckBox Label="@Resources.Map_CloseWithMouse"
                         @bind-Checked="@ViewModel.Map_CloseWithMouse"></MudCheckBox>
        </div>
        <div>
            <MudCheckBox Label="@Resources.EscapeClosesOverlays"
                         @bind-Checked="@ViewModel.EscapeClosesOverlays"></MudCheckBox>
        </div>
    </MudCardContent>
</MudCard>

@code {
    [Inject] private SettingsResources Resources { get; set; }
    [Inject] private SettingsModel ViewModel { get; set; }

    public override string Title => Resources.Title;
}
