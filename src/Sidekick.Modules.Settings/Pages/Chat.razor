@page "/settings/chat"
@layout SettingsLayout
@inherits SidekickView

@foreach (var chatSetting in ViewModel.Chat_Commands)
{
    <ChatCommandEditor ChatSetting="chatSetting"
                       OnRemove="() => Remove(chatSetting)" />
}

<MudText Typo="Typo.h5">@Resources.Chat_Commands</MudText>
<MudText>@Resources.Chat_Commands_Hideout</MudText>
<MudText>@Resources.Chat_Commands_Exit</MudText>

<MudText Typo="Typo.h5">@Resources.Chat_Wildcard</MudText>
<MudText>@Resources.Chat_Wildcard_LastWhisper_CharacterName</MudText>

<div class="d-flex justify-space-between mb-3">
    <MudButton Variant="Variant.Text"
               Color="Color.Default"
               OnClick="RestoreDefaults">
        @Resources.Restore_Defaults
    </MudButton>
    <MudButton Variant="Variant.Filled"
               Color="Color.Secondary"
               OnClick="Add">
        @Resources.Chat_Add
    </MudButton>
</div>

@code {
    [Inject] private SettingsResources Resources { get; set; }
    [Inject] private SettingsModel ViewModel { get; set; }

    public override string Title => Resources.Title;

    private void Remove(ChatSetting chatSetting)
    {
        ViewModel.Chat_Commands.Remove(chatSetting);
    }

    private void Add()
    {
        ViewModel.Chat_Commands.Add(new ChatSetting("", "", true));
    }

    private void RestoreDefaults()
    {
        ViewModel.Chat_Commands = Settings.GetDefaultChatCommands();
    }
}
