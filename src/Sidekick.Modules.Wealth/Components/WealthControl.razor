@using MudBlazor
@using Sidekick.Apis.Common.States
@using Sidekick.Apis.Poe.Account.Clients
@if (WealthParser.IsRunning())
{
    <MudAlert Severity="Severity.Success" Variant="Variant.Filled" Square="true" Dense="true" Icon="Icons.Material.Filled.PlayCircle">
        <div class="align-center d-flex flex-wrap justify-center">
            <div>The wealth tracker is running.</div>

            <div class="d-flex flex-nowrap align-center justify-center" style="width: 100%;">
                <div class="mr-2"><strong>API Status</strong></div>
                @switch (ApiStateProvider.Get(AccountApiClient.ClientName))
                {
                    case ApiState.Working:
                        <div>Working</div>
                        break;
                    case ApiState.Throttled:
                        <div class="mr-2">Throttled</div>
                        <MudIcon Icon="Icons.Material.Filled.Warning" Color="Color.Warning" />
                        break;
                    case ApiState.TimedOut:
                        <div class="mr-2">Timed Out</div>
                        <MudIcon Icon="Icons.Material.Filled.Error" Color="Color.Error" />
                        break;
                    default:
                        <div class="mr-2">Unknown</div>
                        <MudIcon Icon="Icons.Material.Filled.QuestionMark" Color="Color.Error" />
                        break;
                }
            </div>

            <MudButton OnClick="() => Stop()" Size="Size.Small" Color="Color.Success" Variant="Variant.Text" StartIcon="Icons.Material.Filled.Stop" Class="white ma-1">Stop</MudButton>
        </div>
    </MudAlert>
}
else
{
    <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Square="true" Dense="true" Icon="Icons.Material.Filled.StopCircle">
        <div class="align-center d-flex flex-wrap justify-center">
            <div>The wealth tracker is stopped.</div>
            <MudButton OnClick="() => Start()" Size="Size.Large" Color="Color.Error" Variant="Variant.Text" StartIcon="Icons.Material.Filled.PlayArrow" Class="white ma-1">Start</MudButton>
        </div>
    </MudAlert>
}

@inject WealthParser WealthParser
@inject IApiStateProvider ApiStateProvider
@implements IDisposable
@code {
    protected override void OnInitialized()
    {
        WealthParser.OnLogsChanged += Update;
        ApiStateProvider.OnChange += Update;
        base.OnInitialized();
    }

    private void Start()
    {
        WealthParser.Start();
    }

    private void Update()
    {
        _ = InvokeAsync(StateHasChanged);
    }

    private void Stop()
    {
        WealthParser.Stop();
    }

    public void Dispose()
    {
        WealthParser.OnLogsChanged -= Update;
        ApiStateProvider.OnChange -= Update;
    }
}
