@page "/cheatsheets/Archnemesis"
@layout CheatsheetLayout

<MudGrid Spacing="1">

        
        @*@((MarkupString)textblob)*@
        @if(!Loading) {
        @foreach (mod m in modList)
            {
                    <MudItem xs="12" sm="6" md="4" lg="3">
                <MudPaper>
                <div class="d-flex align-center pa-2">
                    <div class="flex-grow-1">
                        <div class="d-flex align-center">
                            <MudText Typo="Typo.h3">
                                @((MarkupString)m.Name)
                            </MudText>
                        </div>
                        <MudText Typo="Typo.body1">
                            @foreach (string i in m.Items) {
                                @i
                                <br />
                            }
                        </MudText>
                    </div>
                </div>
                </MudPaper>
            </MudItem>
            }
        }
        
</MudGrid>

@code {
    [Inject] private CheatsheetResources CheatsheetResources { get; set; }
    [Inject] private Sidekick.Apis.PoeWiki.IPoeWikiClient PoeWikiClient { get; set; }
    [Inject] private IViewInstance ViewInstance { get; set; }

    private Sidekick.Apis.PoeWiki.Models.WikiPage WikiPage { get; set; }
    private bool Loading { get; set; } = true;

    private string textblob { get; set; }
    private List<mod> modList {get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Loading)
        {
            WikiPage = await PoeWikiClient.GetWikiPage(95126);

            textblob = WikiPage.WikiText;

            modList = new List<mod>();

            var _modList = textblob.Split("\n|-\n|").ToList();
            _modList.RemoveAt(0);


            foreach (String m in _modList)
            {
                var split = m.Split("||");
                modList.Add(new mod() { Name = split[0], Level = split[1], Items = split[2].Split("<br>").ToList()});
            }

            Loading = false;
        }
        await ViewInstance.Initialize(CheatsheetResources.Archnemesis);
        await base.OnInitializedAsync();
    }

    private class mod {
        public string Name { get; set; }
        public string Level { get; set; }
        public List<String> Items { get; set; }
    }
}
