@page "/cheatsheets/betrayal"
@layout CheatsheetLayout

<MudGrid Class="justify-end mb-1" Spacing="1">
    <MudItem xs="12" sm="6" md="4" lg="3">
        <Sort OnChange="Sort" />
    </MudItem>
</MudGrid>
<MudGrid Spacing="1">
    @foreach (var agent in Agents)
    {
        <MudItem xs="12" sm="6" md="4" lg="3">
            <Agent Image="@agent.Image" Name="@agent.Name">
                <Reward Model="agent.Transportation" Label="@Resources.TypeTransportation"></Reward>
                <MudDivider />
                <Reward Model="agent.Fortification" Label="@Resources.TypeFortification"></Reward>
                <MudDivider />
                <Reward Model="agent.Research" Label="@Resources.TypeResearch"></Reward>
                <MudDivider />
                <Reward Model="agent.Intervention" Label="@Resources.TypeIntervention"></Reward>
            </Agent>
        </MudItem>
    }
</MudGrid>

@code {
    [Inject] private CheatsheetResources CheatsheetResources { get; set; }
    [Inject] private BetrayalResources Resources { get; set; }
    [Inject] private IViewInstance ViewInstance { get; set; }
    [Inject] private ISettings Settings { get; set; }

    private List<AgentModel> Agents { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Agents.Add(new AgentModel(Resources.AislingName, "Aisling.png")
        {
            Transportation = new RewardModel(Resources.AislingTransportation, RewardValue.Low),
            Fortification = new RewardModel(Resources.AislingFortification, RewardValue.Low),
            Research = new RewardModel(Resources.AislingResearch, RewardValue.High, Resources.AislingResearchTooltip),
            Intervention = new RewardModel(Resources.AislingIntervention, RewardValue.Low)
        });

        Agents.Add(new AgentModel(Resources.CameriaName, "Cameria.png")
        {
            Transportation = new RewardModel(Resources.CameriaTransportation, RewardValue.Low, Resources.CameriaTransportationTooltip),
            Fortification = new RewardModel(Resources.CameriaFortification, RewardValue.Low),
            Research = new RewardModel(Resources.CameriaResearch, RewardValue.Medium),
            Intervention = new RewardModel(Resources.CameriaIntervention, RewardValue.Medium)
        });

        Agents.Add(new AgentModel(Resources.ElreonName, "Elreon.png")
        {
            Transportation = new RewardModel(Resources.ElreonTransportation, RewardValue.Low),
            Fortification = new RewardModel(Resources.ElreonFortification, RewardValue.Low),
            Research = new RewardModel(Resources.ElreonResearch, RewardValue.Low),
            Intervention = new RewardModel(Resources.ElreonIntervention, RewardValue.Medium)
        });

        Agents.Add(new AgentModel(Resources.GraviciusName, "Gravicius.png")
        {
            Transportation = new RewardModel(Resources.GraviciusTransportation, RewardValue.Medium),
            Fortification = new RewardModel(Resources.GraviciusFortification, RewardValue.Low),
            Research = new RewardModel(Resources.GraviciusResearch, RewardValue.NoValue),
            Intervention = new RewardModel(Resources.GraviciusIntervention, RewardValue.High)
        });

        Agents.Add(new AgentModel(Resources.GuffName, "Guff.png")
        {
            Transportation = new RewardModel(Resources.GuffTransportation, RewardValue.Medium),
            Fortification = new RewardModel(Resources.GuffFortification, RewardValue.Low),
            Research = new RewardModel(Resources.GuffResearch, RewardValue.Low),
            Intervention = new RewardModel(Resources.GuffIntervention, RewardValue.Low, Resources.GuffInterventionTooltip)
        });

        Agents.Add(new AgentModel(Resources.HakuName, "Haku.png")
        {
            Transportation = new RewardModel(Resources.HakuTransportation, RewardValue.NoValue),
            Fortification = new RewardModel(Resources.HakuFortification, RewardValue.NoValue),
            Research = new RewardModel(Resources.HakuResearch, RewardValue.NoValue),
            Intervention = new RewardModel(Resources.HakuIntervention, RewardValue.Medium)
        });

        Agents.Add(new AgentModel(Resources.HillockName, "Hillock.png")
        {
            Transportation = new RewardModel(Resources.HillockTransportation, RewardValue.Medium, Resources.HillockTransportationTooltip),
            Fortification = new RewardModel(Resources.HillockFortification, RewardValue.Medium, Resources.HillockFortificationTooltip),
            Research = new RewardModel(Resources.HillockResearch, RewardValue.High, Resources.HillockResearchTooltip),
            Intervention = new RewardModel(Resources.HillockIntervention, RewardValue.Low, Resources.HillockInterventionTooltip)
        });

        Agents.Add(new AgentModel(Resources.ItThatFledName, "It_That_Fled.png")
        {
            Transportation = new RewardModel(Resources.ItThatFledTransportation, RewardValue.Low),
            Fortification = new RewardModel(Resources.ItThatFledFortification, RewardValue.Low),
            Research = new RewardModel(Resources.ItThatFledResearch, RewardValue.High),
            Intervention = new RewardModel(Resources.ItThatFledIntervention, RewardValue.Medium)
        });

        Agents.Add(new AgentModel(Resources.JanusName, "Janus.png")
        {
            Transportation = new RewardModel(Resources.JanusTransportation, RewardValue.Low),
            Fortification = new RewardModel(Resources.JanusFortification, RewardValue.Low),
            Research = new RewardModel(Resources.JanusResearch, RewardValue.Medium),
            Intervention = new RewardModel(Resources.JanusIntervention, RewardValue.High)
        });

        Agents.Add(new AgentModel(Resources.JorginName, "Jorgin.png")
        {
            Transportation = new RewardModel(Resources.JorginTransportation, RewardValue.Low),
            Fortification = new RewardModel(Resources.JorginFortification, RewardValue.Low),
            Research = new RewardModel(Resources.JorginResearch, RewardValue.Low),
            Intervention = new RewardModel(Resources.JorginIntervention, RewardValue.Medium)
        });

        Agents.Add(new AgentModel(Resources.KorellName, "Korell.png")
        {
            Transportation = new RewardModel(Resources.KorellTransportation, RewardValue.Low),
            Fortification = new RewardModel(Resources.KorellFortification, RewardValue.Medium),
            Research = new RewardModel(Resources.KorellResearch, RewardValue.Medium),
            Intervention = new RewardModel(Resources.KorellIntervention, RewardValue.Low)
        });

        Agents.Add(new AgentModel(Resources.LeoName, "Leo.png")
        {
            Transportation = new RewardModel(Resources.LeoTransportation, RewardValue.Low),
            Fortification = new RewardModel(Resources.LeoFortification, RewardValue.Medium),
            Research = new RewardModel(Resources.LeoResearch, RewardValue.Medium),
            Intervention = new RewardModel(Resources.LeoIntervention, RewardValue.Low)
        });

        Agents.Add(new AgentModel(Resources.RikerName, "Riker.png")
        {
            Transportation = new RewardModel(Resources.RikerTransportation, RewardValue.Medium),
            Fortification = new RewardModel(Resources.RikerFortification, RewardValue.Low),
            Research = new RewardModel(Resources.RikerResearch, RewardValue.Medium),
            Intervention = new RewardModel(Resources.RikerIntervention, RewardValue.High)
        });

        Agents.Add(new AgentModel(Resources.RinName, "Rin.png")
        {
            Transportation = new RewardModel(Resources.RinTransportation, RewardValue.Low),
            Fortification = new RewardModel(Resources.RinFortification, RewardValue.Low),
            Research = new RewardModel(Resources.RinResearch, RewardValue.Low),
            Intervention = new RewardModel(Resources.RinIntervention, RewardValue.Medium)
        });

        Agents.Add(new AgentModel(Resources.ToraName, "Tora.png")
        {
            Transportation = new RewardModel(Resources.ToraTransportation, RewardValue.Medium, Resources.ToraTransportationTooltip),
            Fortification = new RewardModel(Resources.ToraFortification, RewardValue.Low, Resources.ToraFortificationTooltip),
            Research = new RewardModel(Resources.ToraResearch, RewardValue.High, Resources.ToraResearchTooltip),
            Intervention = new RewardModel(Resources.ToraIntervention, RewardValue.Medium)
        });

        Agents.Add(new AgentModel(Resources.VaganName, "Vagan.png")
        {
            Transportation = new RewardModel(Resources.VaganTransportation, RewardValue.Low),
            Fortification = new RewardModel(Resources.VaganFortification, RewardValue.Medium),
            Research = new RewardModel(Resources.VaganResearch, RewardValue.Medium),
            Intervention = new RewardModel(Resources.VaganIntervention, RewardValue.High)
        });

        Agents.Add(new AgentModel(Resources.VoriciName, "Vorici.png")
        {
            Transportation = new RewardModel(Resources.VoriciTransportation, RewardValue.Medium),
            Fortification = new RewardModel(Resources.VoriciFortification, RewardValue.Medium),
            Research = new RewardModel(Resources.VoriciResearch, RewardValue.High, Resources.VoriciResearchTooltip),
            Intervention = new RewardModel(Resources.VoriciIntervention, RewardValue.Low)
        });

        Sort();

        await ViewInstance.Initialize(CheatsheetResources.Betrayal);
        await base.OnInitializedAsync();
    }

    private void Sort()
    {
        switch (Settings.Cheatsheets_Betrayal_Sort)
        {
            case "":
                Agents = Agents.OrderBy(x => x.Name).ToList();
                break;
            case "value":
                Agents = Agents.OrderByDescending(x => GetRewardValue(x.Fortification) + GetRewardValue(x.Transportation) + GetRewardValue(x.Research) + GetRewardValue(x.Intervention)).ThenBy(x => x.Name).ToList();
                break;
            case "transportation":
                Agents = Agents.OrderByDescending(x => GetRewardValue(x.Transportation)).ThenBy(x => x.Name).ToList();
                break;
            case "fortification":
                Agents = Agents.OrderByDescending(x => GetRewardValue(x.Fortification)).ThenBy(x => x.Name).ToList();
                break;
            case "research":
                Agents = Agents.OrderByDescending(x => GetRewardValue(x.Research)).ThenBy(x => x.Name).ToList();
                break;
            case "intervention":
                Agents = Agents.OrderByDescending(x => GetRewardValue(x.Intervention)).ThenBy(x => x.Name).ToList();
                break;
        }
    }

    private int GetRewardValue(RewardModel reward) => reward.Value switch
    {
        RewardValue.High => 1000,
        RewardValue.Medium => 100,
        RewardValue.Low => 10,
        _ => 1,
    };
}
