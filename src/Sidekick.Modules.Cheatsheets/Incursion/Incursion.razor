@page "/cheatsheets/incursion"
@layout CheatsheetLayout
@inherits SidekickView

<MudGrid Spacing="1">
    @foreach (var room in Rooms)
    {
        <MudItem xs="12" sm="6" md="4" lg="3">
            <Room Model="room" />
        </MudItem>
    }
</MudGrid>

@code {
    [Inject] private CheatsheetResources CheatsheetResources { get; set; }
    [Inject] private IncursionResources Resources { get; set; }

    private List<RoomModel> Rooms { get; set; }
    
    public override string Title => CheatsheetResources.Incursion;

    protected override async Task OnInitializedAsync()
    {
        Rooms = new List<RoomModel>()
{
            new RoomModel(Resources.CorruptionChamberContains, Resources.CorruptionChamberModifiers)
            {
                Level1 = new RoomTierModel(Resources.CorruptionChamber, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.CatalystOfCorruption, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.LocusOfCorruption, RewardValue.High),
            },
            new RoomModel(Resources.GemcuttersWorkshopContains, string.Empty)
            {
                Tooltip = Resources.DoubleGemCorruptionTooltip,
                Level1 = new RoomTierModel(Resources.GemcuttersWorkshop, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.DepartmentOfThaumaturgy, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.DoryanisInstitute, RewardValue.High),
            },
            new RoomModel(Resources.VaultContains, string.Empty)
            {
                Level1 = new RoomTierModel(Resources.Vault, RewardValue.Medium),
                Level2 = new RoomTierModel(Resources.Treasury, RewardValue.Medium),
                Level3 = new RoomTierModel(Resources.WealthOfTheVaal, RewardValue.High),
            },
            new RoomModel(Resources.SurveyorsStudyContains, string.Empty)
            {
                Level1 = new RoomTierModel(Resources.SurveyorsStudy, RewardValue.Medium),
                Level2 = new RoomTierModel(Resources.OfficeOfCartography, RewardValue.Medium),
                Level3 = new RoomTierModel(Resources.AtlasOfWorlds, RewardValue.High),
            },
            new RoomModel(Resources.HallOfMettleContains, string.Empty)
            {
                Level1 = new RoomTierModel(Resources.HallOfMettle, RewardValue.Medium),
                Level2 = new RoomTierModel(Resources.HallOfHeroes, RewardValue.Medium),
                Level3 = new RoomTierModel(Resources.HallOfLegends, RewardValue.High),
            },
            new RoomModel(Resources.ShrineOfEmpowermentContains, Resources.ShrineOfEmpowermentModifiers)
            {
                Level1 = new RoomTierModel(Resources.ShrineOfEmpowerment, RewardValue.Low),
                Level2 = new RoomTierModel(Resources.SanctumOfUnity, RewardValue.Low),
                Level3 = new RoomTierModel(Resources.TempleNexus, RewardValue.High),
            },
            new RoomModel(Resources.StorageRoomContains, string.Empty)
            {
                Level1 = new RoomTierModel(Resources.StorageRoom, RewardValue.Low),
                Level2 = new RoomTierModel(Resources.Warehouses, RewardValue.Low),
                Level3 = new RoomTierModel(Resources.MuseumOfArtifacts, RewardValue.Low),
            },
            new RoomModel(string.Empty, Resources.GuardhouseModifiers)
            {
                Level1 = new RoomTierModel(Resources.Guardhouse, RewardValue.Low),
                Level2 = new RoomTierModel(Resources.Barracks, RewardValue.Low),
                Level3 = new RoomTierModel(Resources.HallOfWar, RewardValue.Low),
            },
            new RoomModel(Resources.WorkshopContains, Resources.WorkshopModifiers)
            {
                Level1 = new RoomTierModel(Resources.Workshop, RewardValue.Low),
                Level2 = new RoomTierModel(Resources.EngineeringDepartment, RewardValue.Low),
                Level3 = new RoomTierModel(Resources.Factory, RewardValue.Low),
            },
            new RoomModel(Resources.RoyalMeetingRoomContains, Resources.RoyalMeetingRoomModifiers)
            {
                Level1 = new RoomTierModel(Resources.RoyalMeetingRoom, RewardValue.Low),
                Level2 = new RoomTierModel(Resources.HallOfLords, RewardValue.Low),
                Level3 = new RoomTierModel(Resources.ThroneOfAtziri, RewardValue.Low),
            },
            new RoomModel(Resources.TormentCellsContains, string.Empty)
            {
                Level1 = new RoomTierModel(Resources.TormentCells, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.TortureCages, RewardValue.Low),
                Level3 = new RoomTierModel(Resources.SadistsDen, RewardValue.Low),
            },
            new RoomModel(Resources.StrongboxChamberContains, string.Empty)
            {
                Level1 = new RoomTierModel(Resources.StrongboxChamber, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.HallOfLocks, RewardValue.Low),
                Level3 = new RoomTierModel(Resources.CourtOfTheSealedDeath, RewardValue.Low),
            },
            new RoomModel(Resources.SacrificalChamberContains, string.Empty)
            {
                Level1 = new RoomTierModel(Resources.SacrificialChamber, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.HallOfOfferings, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.ApexOfAscension, RewardValue.Low),
            },
            new RoomModel(Resources.JewellersWorkshopContains, string.Empty)
            {
                Level1 = new RoomTierModel(Resources.JewellersWorkshop, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.JewelleryForge, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.GlitteringHalls, RewardValue.Low),
            },
            new RoomModel(Resources.SplinterResearchLabContains, string.Empty)
            {
                Level1 = new RoomTierModel(Resources.SplinterResearchLab, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.BreachContainmentChamber, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.HouseOfOthers, RewardValue.Low),
            },
            new RoomModel(Resources.TempestGeneratorContains, Resources.TempestGeneratorModifiers)
            {
                Level1 = new RoomTierModel(Resources.TempestGenerator, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.HurricaneEngine, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.StormOfCorruption, RewardValue.NoValue),
            },
            new RoomModel(Resources.ExplosivesRoomContains, string.Empty)
            {
                Level1 = new RoomTierModel(Resources.ExplosivesRoom, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.DemolitionLab, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.ShrineOfUnmaking, RewardValue.NoValue),
            },
            new RoomModel(Resources.ArmourersWorkshopContains, Resources.ArmourersWorkshopModifiers)
            {
                Level1 = new RoomTierModel(Resources.ArmourersWorkshop, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.Armoury, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.ChamberOfIron, RewardValue.NoValue),
            },
            new RoomModel(Resources.SparringRoomContains, Resources.SparringRoomModifiers)
            {
                Level1 = new RoomTierModel(Resources.SparringRoom, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.ArenaOfValour, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.HallOfChampions, RewardValue.NoValue),
            },
            new RoomModel(Resources.PoisonGardenContains, Resources.PoisonGardenModifiers)
            {
                Level1 = new RoomTierModel(Resources.PoisonGarden, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.CultivarChamber, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.ToxicGrove, RewardValue.NoValue),
            },
            new RoomModel(Resources.HatcheryContains, Resources.HatcheryModifiers)
            {
                Level1 = new RoomTierModel(Resources.Hatchery, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.AutomatonLab, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.HybridisationChamber, RewardValue.NoValue),
            },
            new RoomModel(Resources.TrapWorkshopContains, Resources.TrapWorkshopModifiers)
            {
                Level1 = new RoomTierModel(Resources.TrapWorkshop, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.TempleDefenseWorkshop, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.DefenseResearchLab, RewardValue.NoValue),
            },
            new RoomModel(Resources.FlameWorkshopContains, Resources.FlameWorkshopModifiers)
            {
                Level1 = new RoomTierModel(Resources.FlameWorkshop, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.OmnitectForge, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.CrucibleOfFlame, RewardValue.NoValue),
            },
            new RoomModel(Resources.LightningWorkshopContains, Resources.LightningWorkshopModifiers)
            {
                Level1 = new RoomTierModel(Resources.LightningWorkshop, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.OmnitectReactorPlant, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.ConduitOfLightning, RewardValue.NoValue),
            },
            new RoomModel(Resources.PoolsOfRestorationContains, Resources.PoolsOfRestorationModifiers)
            {
                Level1 = new RoomTierModel(Resources.PoolsOfRestoration, RewardValue.NoValue),
                Level2 = new RoomTierModel(Resources.SanctumOfVitality, RewardValue.NoValue),
                Level3 = new RoomTierModel(Resources.SanctumOfImmortality, RewardValue.NoValue),
            },
        };

        await base.OnInitializedAsync();
    }
}
