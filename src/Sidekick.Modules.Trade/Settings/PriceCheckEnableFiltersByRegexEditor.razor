@using Sidekick.Common.Blazor.Settings
@using Sidekick.Common.Settings

<div class="flex items-start gap-2">
    <div class="grow">
        <FormInput Value="@FiltersRegex"
                   ValueChanged="@ValueChanged"
                   Label="@Resources["PriceCheck_Enable_Filters_By_Regex"]" />
    </div>
    <div class="self-end">
        <TooltipHint Text="@Resources["Regex_Hint"]" />
    </div>
</div>

@inject IStringLocalizer<SettingsResources> Resources
@inject ISettingsService SettingsService

@code {

    private string? FiltersRegex { get; set; }

    protected override async Task OnInitializedAsync()
    {
        FiltersRegex = await SettingsService.GetString(SettingKeys.PriceCheckEnableFiltersByRegex);
        SettingsService.OnSettingsChanged += OnSettingsChanged;

        await base.OnInitializedAsync();
    }

    private async Task ValueChanged(string? value)
    {
        FiltersRegex = value;
        await SettingsService.Set(SettingKeys.PriceCheckEnableFiltersByRegex, value);
    }

    private async void OnSettingsChanged(string[] keys)
    {
        if (keys.Contains(SettingKeys.PriceCheckEnableFiltersByRegex))
        {
            FiltersRegex = await SettingsService.GetString(SettingKeys.PriceCheckEnableFiltersByRegex);
            await InvokeAsync(StateHasChanged);
        }
    }

    public void Dispose()
    {
        SettingsService.OnSettingsChanged -= OnSettingsChanged;
    }

}
