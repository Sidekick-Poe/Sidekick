@using Sidekick.Common.Settings
@using Sidekick.Modules.Trade.Localization

<FormNumberInline Label="@Resources["Minimum_Stock_in_Bulk_Trade"]"
                  Value="@Minimum"
                  ValueChanged="MinimumChanged" />

@inject IStringLocalizer<TradeResources> Resources
@inject ISettingsService SettingsService
@implements IDisposable

@code {

    private double? Minimum { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Minimum = await SettingsService.GetInt(SettingKeys.PriceCheckBulkMinimumStock);

        SettingsService.OnSettingsChanged += OnSettingsChanged;

        await base.OnInitializedAsync();
    }

    private async Task MinimumChanged(double? value)
    {
        Minimum = value ?? DefaultSettings.PriceCheckBulkMinimumStock;
        await SettingsService.Set(SettingKeys.PriceCheckBulkMinimumStock, (int)Minimum);
    }

    private async void OnSettingsChanged(string[] keys)
    {
        if (!keys.Contains(SettingKeys.PriceCheckBulkMinimumStock)) return;

        Minimum = await SettingsService.GetInt(SettingKeys.PriceCheckBulkMinimumStock);
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        SettingsService.OnSettingsChanged -= OnSettingsChanged;
    }

}
