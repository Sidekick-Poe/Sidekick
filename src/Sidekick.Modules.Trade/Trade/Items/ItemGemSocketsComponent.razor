@using Sidekick.Apis.Poe.Models
@using Sidekick.Apis.Poe.Trade.Trade.Results

@if (Sockets.Any(x => x.Colour != SocketColour.PoE2_Gem))
{
    return;
}

<div class="flex flex-wrap items-center justify-center gap-1 my-1">
    @for (var i = 0; i < Sockets.Count; i++)
    {
        <div class="item-socket-poe2-gem"></div>
    }
</div>

@code {

    [Parameter]
    public required TradeResult Result { get; set; }

    private List<Socket> Sockets { get; set; } = [];

    protected override bool ShouldRender() => false;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (Result.Item.GemSockets.Count > 0)
        {
            Sockets = Result.Item.Sockets.Select(x => new Socket()
                {
                    Group = x.Group,
                    Colour = SocketColour.PoE2_Gem,
                })
                .ToList();
        }
    }

}
