@using Sidekick.Apis.Poe.Trade.Filters
@using Sidekick.Common.Game.Items
@for (var i = 0; i < ModifierFilters.Count; i++)
{
    var index = i;
    <ModifierFilterComponent Filter="@ModifierFilters[index]"/>

    var isLastFilter = i + 1 == ModifierFilters.Count;
    if (!isLastFilter)
    {
        var isDifferentBlock = ModifierFilters[i].Line.BlockIndex != ModifierFilters[i + 1].Line.BlockIndex;
        if (isDifferentBlock)
        {
            <ItemSeparator Rarity="Item.Header.Rarity"/>
        }
    }
}

@code {

    [CascadingParameter]
    public required Item Item { get; set; }

    [Parameter]
    public required List<ModifierFilter> ModifierFilters { get; set; }

    private ModifierCategory? NormalizeModifierCategory(ModifierCategory? category) => category switch
    {
        ModifierCategory.Fractured => ModifierCategory.Explicit,
        ModifierCategory.Crafted => ModifierCategory.Explicit,
        _ => category,
    };

}
