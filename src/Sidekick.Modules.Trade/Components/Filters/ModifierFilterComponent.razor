@using Sidekick.Apis.Poe.Trade.Trade.Filters
@using Sidekick.Apis.PoeWiki
@using Sidekick.Common.Game.Items
@using Sidekick.Common.Game.Languages
@using Sidekick.Common.Settings
@using Sidekick.Modules.Trade.Localization

<FilterWrapper>
    <div class="flex flex-nowrap items-center">
        <div class="grow">
            <FormCheckbox Value="Filter.Checked ?? false"
                          ValueChanged="CheckedChanged">
                <ItemModifierText Class="text-left"
                                  Category="Filter.Line.Modifiers.FirstOrDefault()?.Category">@Filter.Line.Text</ItemModifierText>
            </FormCheckbox>
        </div>

        @if (EnchantmentOilNames?.Any() ?? false)
        {
            <OilAnointment OilNames="EnchantmentOilNames"/>
        }

        <div class="flex flex-col items-end justify-between">
            @if (Filter is
                     {
                         Checked: true,
                         HasMoreThanOneCategory: true,
                         FirstCategory: not ModifierCategory.Explicit
                     })
            {
                <TooltipRight>
                    <ChildContent>
                        <ItemModifierCategoryChip Category="Filter.FirstCategory"
                                                  Checked="Filter.ForceFirstCategory"
                                                  ShowCheckbox="true"
                                                  OnClick="() => Filter.ForceFirstCategory = !Filter.ForceFirstCategory"/>
                    </ChildContent>
                    <TooltipContent>
                        @Resources["ForceCategoryHint"]
                    </TooltipContent>
                </TooltipRight>

                <div class="h-[2px]"></div>
            }

            @if (Filter is
                     {
                         Checked: true,
                         Line:
                         {
                             HasValues: true
                         }
                     })
            {
                <FilterRange @bind-Min="@Filter.Min" @bind-Max="@Filter.Max" Type="@Filter.FilterType"
                             TypeChanged="(v) => Filter.ChangeFilterType(v)"/>
            }
        </div>
    </div>
</FilterWrapper>

@inject IStringLocalizer<TradeResources> Resources
@inject IPoeWikiClient PoeWikiClient
@inject IGameLanguageProvider GameLanguageProvider
@inject ISettingsService SettingsService

@code {

    [Parameter]
    public required ModifierFilter Filter { get; set; }

    private List<string>? EnchantmentOilNames { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Filter.Line.Modifiers.FirstOrDefault()?.Category == ModifierCategory.Enchant && GameLanguageProvider.IsEnglish())
        {
            var oilMetadataIds = await PoeWikiClient.GetOilsMetadataIdsFromEnchantment(Filter.Line);
            if (oilMetadataIds != null)
            {
                EnchantmentOilNames = oilMetadataIds.Where(x => PoeWikiClient.BlightOilNamesByMetadataIds.ContainsKey(x)).Select(x => PoeWikiClient.BlightOilNamesByMetadataIds[x]).ToList();
            }
        }

        if (Filter.Checked == true)
        {
            CheckedChanged(true);
        }
    }

    private async void CheckedChanged(bool value)
    {
        Filter.Checked = value;

        // We can change the settings in the Trade window, so we should fetch here every time.
        Filter.NormalizeValue = await SettingsService.GetObject<double>(SettingKeys.PriceCheckNormalizeValue);
        var filterType = await SettingsService.GetEnum<FilterType>(SettingKeys.PriceCheckDefaultFilterType) ?? FilterType.Minimum;
        Filter.ChangeFilterType(filterType);
    }

}
