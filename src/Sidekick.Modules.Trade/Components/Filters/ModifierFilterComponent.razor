
<div>
    <MudCheckBox @bind-Checked="Filter.Enabled" Color="Color.Primary" Class="font-smallcaps mb-1 d-flex">
        <div class="d-flex flex-row justify-start align-center">
            <ModifierText Class="flex-grow-1 my-1 mr-2" Modifier="Filter.Modifier" />
            @if (Filter.Modifier.OptionValue == null && Filter.Modifier.Values.Count > 0)
            {
                <MudIconButton Icon="@Icons.Material.Filled.SwapHoriz"
                               OnClick="SwapValues"
                               Size="Size.Small"
                               Class="mr-1" />
                <div class="filter-min"
                     @onwheel="OnWheelMin"
                     @onwheel:preventDefault
                     @oncontextmenu="ClearMin">
                    <MudInput @bind-Value="Filter.Min" Placeholder="@Resources.Filters_Min" DisableUnderLine />
                </div>
                <div class="filter-max my-1 mr-2"
                     @onwheel="OnWheelMax"
                     @onwheel:preventDefault
                     @oncontextmenu="ClearMax">
                    <MudInput @bind-Value="Filter.Max" Placeholder="@Resources.Filters_Max" DisableUnderLine />
                </div>
            }
        </div>
    </MudCheckBox>
</div>

@code {
    [Inject] public TradeResources Resources { get; set; }

    [Parameter] public ModifierFilter Filter { get; set; }

    private void SwapValues(MouseEventArgs args)
    {
        (Filter.Min, Filter.Max) = (Filter.Max, Filter.Min);
    }

    private void OnWheelMin(WheelEventArgs args)
    {
        if (!Filter.Min.HasValue) Filter.Min = 0;
        if (args.DeltaY < 0) Filter.Min += 1;
        else Filter.Min -= 1;
    }

    private void ClearMin()
    {
        Filter.Min = null;
    }

    private void OnWheelMax(WheelEventArgs args)
    {
        if (!Filter.Max.HasValue) Filter.Max = 0;
        if (args.DeltaY < 0) Filter.Max += 1;
        else Filter.Max -= 1;
    }

    private void ClearMax()
    {
        Filter.Max = null;
    }
}
