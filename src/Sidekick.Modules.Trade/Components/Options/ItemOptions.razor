@using Sidekick.Common.Browser
@using Sidekick.Common.Game
@using Sidekick.Common.Game.Items

<button data-dropdown-toggle="@ElementId"
        data-dropdown-trigger="hover"
        data-dropdown-placement="right-start"
        data-dropdown-offset-distance="-10"
        data-dropdown-offset-skidding="-30"
        class="inline-flex items-center justify-center text-base font-medium tracking-wide dark:text-violet-500 transition-colors duration-200 rounded-md bg-transparent hover:text-violet-400 @UiClasses.FocusClasses">
    <Icon Svg="@UiIcons.EllipsisVertical" />
</button>

<div id="@ElementId"
     class="fixed! z-10 hidden border border-solid border-stone-800 bg-black grow overflow-auto p-2 rounded-lg shadow-lg">
    <div class="flex flex-col justify-items-start">
        <ButtonLink Class="justify-start! p-3 gap-2" OnClick="OpenWiki"><Icon Svg="@UiIcons.External" /> @(Item.Header.Game == GameType.PathOfExile ? "poewiki.net" : "poe2wiki.net")</ButtonLink>
        <ButtonLink Class="justify-start! p-3 gap-2" OnClick="OpenPoeDb"><Icon Svg="@UiIcons.External" /> @(Item.Header.Game == GameType.PathOfExile ? "poedb.tw" : "poe2db.tw")</ButtonLink>
        <ButtonLink Class="justify-start! p-3 gap-2" OnClick="OpenCraftOfExile"><Icon Svg="@UiIcons.External" /> craftofexile.com</ButtonLink>
    </div>
</div>

@inject IBrowserProvider browserProvider
@inherits FlowbiteComponent

@code {

    [Parameter]
    public required Item Item { get; set; }

    private Guid ElementId { get; } = Guid.NewGuid();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    public void OpenWiki()
    {
        var poeWikiBaseUri = "https://www.poewiki.net/";
        var poe2WikiBaseUri = "https://www.poe2wiki.net/";
        var poeWikiSubUrl = "w/index.php?search=";
        var searchLink = Item.Header.ApiName ?? Item.Header.ApiType;
        var baseUrl = Item.Header.Game == GameType.PathOfExile ? poeWikiBaseUri : poe2WikiBaseUri;
        var wikiLink = poeWikiSubUrl + searchLink?.Replace(" ", "+");
        var uri = new Uri(baseUrl + wikiLink);

        browserProvider.OpenUri(uri);
    }

    public void OpenPoeDb()
    {
        var poeDbBaseUri = "https://poedb.tw/";
        var poe2DbBaseUri = "https://poe2db.tw/";
        var poeDbSubUrl = "search?q=";
        var searchLink = Item.Header.ApiName ?? Item.Header.ApiType;
        var baseUrl = Item.Header.Game == GameType.PathOfExile ? poeDbBaseUri : poe2DbBaseUri;
        var wikiLink = poeDbSubUrl + searchLink?.Replace(" ", "+");
        var uri = new Uri(baseUrl + wikiLink);

        browserProvider.OpenUri(uri);
    }

    public void OpenCraftOfExile()
    {
        var game = Item.Header.Game;

        var gameParam = game == GameType.PathOfExile ? "poe1" : "poe2";
        var encodedItemText = Uri.EscapeDataString(Item.Text);

        var uriBuilder = new UriBuilder("https://craftofexile.com/")
            {
                Query = $"game={gameParam}&eimport={encodedItemText}"
            };

        browserProvider.OpenUri(uriBuilder.Uri);
    }

}
