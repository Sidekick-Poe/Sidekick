@using Sidekick.Apis.Poe.Parser.Properties.Definitions
@using Sidekick.Apis.Poe.Trade.Models
@using Sidekick.Common.Game.Items

@if (LineContents.Count > 0)
{
    @foreach (var property in LineContents)
    {
        if (property.Text == SeparatorProperty.Text)
        {
            <ItemSeparator Rarity="Item.Header.Rarity"/>
        }
        else
        {
            <TextBase
                Class="text-[#7f7f7f] font-caps text-center leading-none py-[1px]">@((MarkupString)GetLine(property))</TextBase>
        }
    }

    <ItemSeparator Rarity="Item.Header.Rarity"/>
}

@code {

    [Parameter]
    public required Item Item { get; set; }

    [Parameter]
    public List<LineContent> LineContents { get; set; } =
    [
    ];

    private string GetLine(LineContent property)
    {
        var text = property.Text ?? string.Empty;

        foreach (var value in property.Values)
        {
            if (value.Value == null)
            {
                continue;
            }

            var color = value.Type.GetColour();
            text = text.Replace(value.Value, $"<span class=\"{color}\">{value.Value}</span>");
        }

        return text;
    }

}
