
@if (LineContents != null && LineContents.Count > 0)
{
    <div class="line-contents">
        @foreach (var property in LineContents)
        {
            <MudText Typo="Typo.body1" Class="font-smallcaps" Align="Align.Center">@((MarkupString)GetLine(property))</MudText>
        }
    </div>

    <ItemSeparator Rarity="Item.Metadata.Rarity" />
}

@code {
    [Parameter] public Item Item { get; set; }
    [Parameter] public List<LineContent> LineContents { get; set; }

    private string GetLine(LineContent property)
    {
        var highlightMatches = new Dictionary<int, (string Value, LineContentType Type)>();
        var text = property.Text;

        foreach (var value in property.Values)
        {
            var color = value.Type switch
            {
                LineContentType.Augmented => "#8888FF",
                LineContentType.Fire => "#960000",
                LineContentType.Cold => "#366492",
                LineContentType.Chaos => "#D02090",
                LineContentType.Lightning => "#FFD700",
                LineContentType.BlockedIncursionRoom => "#5A5A5A",
                _ => "#FFFFFF",
            };

            text = text.Replace(value.Value, $"<span style=\"color:{color};\">{value.Value}</span>");
        }

        return text;
    }
}
