
@if (Item != null)
{
    <div class="header @BackgroundClass">
        <div class="influences left">
            <ItemInfluencesComponent Item="Item" />
        </div>
        @if (!string.IsNullOrEmpty(Item.Original.Name))
        {
            <MudText Typo="Typo.h6" Align="Align.Center" Class="name font-smallcaps" Style="@LabelStyle">@Item.Original.Name</MudText>
        }
        @if (!string.IsNullOrEmpty(Item.Original.Type))
        {
            <MudText Typo="Typo.h6" Align="Align.Center" Class="type font-smallcaps" Style="@LabelStyle">@Item.Original.Type</MudText>
        }
        <div class="influences right">
            <ItemInfluencesComponent Item="Item" />
        </div>
    </div>
}

@code {
    [Parameter] public Item Item { get; set; }

    private string BackgroundClass
    {
        get
        {
            if (Item.Properties.IsRelic)
            {
                if (string.IsNullOrEmpty(Item.Original.Name) || string.IsNullOrEmpty(Item.Original.Type))
                {
                    return "header-relic";
                }
                return "header-double-relic";
            }

            switch (Item.Metadata.Rarity)
            {
                case Rarity.Currency: return "header-currency";
                case Rarity.Magic: return "header-magic";
                case Rarity.Gem: return "header-gem";
                case Rarity.Rare:
                    if (string.IsNullOrEmpty(Item.Original.Name) || string.IsNullOrEmpty(Item.Original.Type))
                    {
                        return "header-rare";
                    }
                    return "header-double-rare";
                case Rarity.Unique:
                    if (string.IsNullOrEmpty(Item.Original.Name) || string.IsNullOrEmpty(Item.Original.Type))
                    {
                        return "header-unique";
                    }
                    return "header-double-unique";
                default: return "header-normal";
            }
        }
    }

    private string LabelStyle => Item.Metadata.Rarity switch
    {
        Rarity.Currency => "color:#AA9E82;",
        Rarity.Magic => "color:#8888FF;",
        Rarity.Rare => "color:#FFFF77;",
        Rarity.Unique => "color:#AF6025;",
        Rarity.Gem => "color:#1BA29B",
        _ => "color:#C8C8C8",
    };
}
