@using Sidekick.Apis.Poe.Trade.Models
@using Sidekick.Common.Game.Items

@if (Item.Properties.Sockets == null)
{
    return;
}

<div class="item-sockets-wrapper">
    <div class="item-sockets @WidthClass">
        @{
            var previousGroup = -1;
        }
        @foreach (var socket in Item.Properties.Sockets.OrderBy(x => x.Group)
                      .Select((x, index) => new
                      {
                          x.Colour,
                          x.Group,
                          Index = index
                      }))
        {
            var isLink = previousGroup != -1 && previousGroup == socket.Group;

            switch (socket.Colour)
            {
                case SocketColour.Red:
                    <div class="item-socket item-socket-red @(isLink ? "item-socket-link" : "")"></div>
                    break;

                case SocketColour.Green:
                    <div class="item-socket item-socket-green @(isLink ? "item-socket-link" : "")"></div>
                    break;

                case SocketColour.Blue:
                    <div class="item-socket item-socket-blue @(isLink ? "item-socket-link" : "")"></div>
                    break;

                case SocketColour.White:
                    <div class="item-socket item-socket-white @(isLink ? "item-socket-link" : "")"></div>
                    break;

                case SocketColour.Abyss:
                    <div class="item-socket item-socket-abyss @(isLink ? "item-socket-link" : "")"></div>
                    break;

                case SocketColour.PoE2:
                    <div class="item-socket item-socket-poe2"></div>
                    break;

                case SocketColour.PoE2_Gem:
                    <div class="item-socket item-socket-poe2"></div>
                    break;

                case SocketColour.PoE2_Rune:
                    <div class="item-socket item-socket-poe2 item-socket-poe2-rune"></div>
                    break;

                case SocketColour.PoE2_Soulcore:
                    <div class="item-socket item-socket-poe2 item-socket-poe2-soulcore"></div>
                    break;
            }

            previousGroup = socket.Group;
        }
    </div>
</div>

@code {

    [Parameter]
    public required TradeItem Item { get; set; }

    private string WidthClass => Item.Width == 1 ? "narrow" : "wide";

}
