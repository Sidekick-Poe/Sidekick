
@if (new Uri(NavigationManager.Uri).PathAndQuery != "/home")
{
    <button type="button"
            @onclick="OnClick"
            @onclick:preventDefault="true"
            @onclick:stopPropagation="true"
            tabindex="-1"
            title="@Resources["Home"]"
            class="p-2 text-base font-medium tracking-wide text-white transition-colors duration-200 bg-violet-900 hover:bg-violet-700">
        <Icon Svg="@UiIcons.Home" Size="@UiIconSize.Medium" />
    </button>
}

@inject IStringLocalizer<AppResources> Resources
@inject NavigationManager NavigationManager
@inject IViewLocator ViewLocator
@inject ICurrentView CurrentView
@implements IDisposable

@code {

    /// <inheritdoc/>
    protected override async Task OnInitializedAsync()
    {
        NavigationManager.LocationChanged += NavigationManagerOnLocationChanged;

        await base.OnInitializedAsync();
    }

    private void NavigationManagerOnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _ = InvokeAsync(StateHasChanged);
    }

    private void OnClick()
    {
        CurrentView.Close();
        ViewLocator.Open(SidekickViewType.Standard, "/home");
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= NavigationManagerOnLocationChanged;
    }

}
