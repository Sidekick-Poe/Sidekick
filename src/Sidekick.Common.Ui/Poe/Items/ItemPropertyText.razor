@using Sidekick.Apis.Poe.Trade.Results

<TextBase Class="@($"font-caps leading-none py-px flex items-center {Class}")">
    <span class="text-[#7f7f7f] whitespace-nowrap">@Label</span>
    @if (OnlyShowLabel == false)
    {
        <span class="text-[#7f7f7f]">:&nbsp;</span>
        <span class="@ContentType.GetColour()">@Value</span>
    }

    @if (HasAdditionalInformation && AdditionalInformation != null)
    {
        <TooltipRight>
            <ChildContent>
                <span class="inline-block ml-1 flex">
                    <Icon Svg="@UiIcons.PlusBox" Size="@UiIconSize.Small" />
                </span>
            </ChildContent>
            <TooltipContent>
                @AdditionalInformation
            </TooltipContent>
        </TooltipRight>
    }

    @if (!string.IsNullOrEmpty(Hint))
    {
        <div class="ml-1 flex">
            <TooltipHint Text="@Hint"/>
        </div>
    }
</TextBase>

@code {

    [Parameter]
    public string? Label { get; set; }

    [Parameter]
    public string? Value { get; set; }

    [Parameter]
    public bool HasAdditionalInformation { get; set; }

    [Parameter]
    public string? Hint { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public RenderFragment? AdditionalInformation { get; set; }

    [Parameter]
    public LineContentType ContentType { get; set; } = LineContentType.Simple;

    [Parameter]
    public bool OnlyShowLabel { get; set; }

}
